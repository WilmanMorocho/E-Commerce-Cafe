version: '3.8'

services:
  frontend:
    image: demoweb-frontend:latest
    ports:
      - "80:80"
    networks:
      - app-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  backend:
    image: demoweb-backend:latest
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - POSTGRES_HOST=database
      - POSTGRES_DB=cafeAroma
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password123
    networks:
      app-network:
        aliases:
          - backend
    depends_on:
      - database
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  database:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: cafeAroma
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

volumes:
  postgres_data:

networks:
  app-network:
    driver: overlay